filter {
  if [logtype] == "bronotice" {
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => { "message" => "%{LOG_HEADER}" }
    }
    if [bro_message] {
      grok {
        patterns_dir => ["/etc/logstash/patterns"]
        match => { "bro_message" => "%{NOTICE}" }
      }
      mutate {
        replace => [ "message", "%{bro_message}" ]
        remove_field => [ "bro_message" ]
      }
    }
    if [bro_notice_type] and [bro_notice_type] == "SSL::Invalid_Server_Cert" {
      mutate {
        add_field => { "cert_subject" => "%{bro_notice_desc}" }
      }
    }
    if [n_src_ip] {
      if [src_ip] {
        mutate { replace => [ "src_ip", "%{n_src_ip}" ] }
      } else {
        mutate { add_field => [ "src_ip", "%{n_src_ip}" ] }
      }
      mutate { remove_field => [ "n_src_ip" ] }
    }
    if [n_dst_ip] {
      if [dst_ip] {
        mutate { replace => [ "dst_ip", "%{n_dst_ip}" ] }
      } else {
        mutate { add_field => [ "dst_ip", "%{n_dst_ip}" ] }
      }
      mutate { remove_field => [ "n_dst_ip" ] }
    }
    if [n_dst_port] {
      if [dst_port] {
        mutate { replace => [ "dst_port", "%{n_dst_port}" ]
        }
      } else {
        mutate { add_field => [ "dst_port", "%{n_dst_port}" ] }
      }
      mutate { remove_field => [ "n_dst_port" ] }
    }
    if [fuid] {
      mutate { split => { "fuid" => "," } }
    }
    if [mime_type] {
      mutate { split => { "mime_type" => "," } }
    }
    mutate {
      convert => { "src_port" => "integer" }
	    convert => { "dst_port" => "integer" }
    }
    if [bro_notice_msg] {
      mutate {
        replace => [ "message", "%{bro_notice_msg}" ]
        remove_field => [ "bro_notice_msg" ]
      }
    }
    if [cuid] { mutate { split => { "cuid" => "," } } }
    if [bro_ts] {
      date {
        match => [ "bro_ts", "UNIX"]
        timezone => "UTC"
      }
      mutate { remove_field => [ "bro_ts" ] }
    }
  }
}
