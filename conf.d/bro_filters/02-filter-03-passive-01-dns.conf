filter {
  if ![is_dns_clone] and [logtype] == "brodns" and [domain_ips] {
    clone {
      clones => ["logstash-bro"]
      add_field => { "is_dns_clone" => "true" }
    }
  }

  if [is_dns_clone] {
    mutate {
      replace => [ "logtype", "dns" ]
    }
    split {
      field => "domain_ips"
      target => "ip"
    }
    if [ip] {
      ruby {
        code => "
          aa_list = event.get('dns_answers')
          at_list = event.get('dns_answers_ttls')
          ll = aa_list.length
          x = event.get('ip')
          event.set('ips', [x])
          (1..ll).each do |i|
            vv = aa_list[i-1]
            if vv == x
              tt_l = at_list[i-1]
              event.set('ttl', tt_l)
              break
            end
          end
        "
      }
    }

    mutate {
      convert => { "ttl" => "integer" }
      replace => [ "dst_ip", "%{ip}" ]
    }

    mutate {
      remove_field => [ "dst_geoip", "dst_location", "dns_trans_id", "cuid"  ]
      remove_field => [ "dns_resp_code", "domain_ips_len" ]
      remove_field => [ "domain_ips", "dns_answers", "dns_answers_ttls" ]
      remove_field => [ "src_port", "message_raw", "ip" ]
    }
  }
}
